name: AI Programmer Agent

on:
  issues:
    types: [opened, reopened, labeled]

permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write

concurrency:
  group: ai-programmer-${{ github.event.issue.number }}
  cancel-in-progress: false

jobs:
  programmer-agent:
    runs-on: ubuntu-latest
    if: |
      github.event.action == 'opened' || 
      github.event.action == 'reopened' || 
      (github.event.action == 'labeled' && github.event.label.name == 'ai')
    
    steps:
      - name: Debug GitHub context
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Event: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "Issue number: ${{ github.event.issue.number }}"
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run Programmer Agent
        uses: muya/amazon-ecs-run-task@v1
        with:
          task-definition: ${{ secrets.PROGRAMMER_TASK_DEFINITION }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          subnet-ids: ${{ secrets.SUBNET_IDS }}
          security-group-ids: ${{ secrets.SECURITY_GROUP_IDS }}
          assign-public-ip: ENABLED
          wait-for-finish: true
          wait-for-minutes: 10
          environment-variables: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            GH_OWNER=${{ github.repository_owner }}
            GH_REPO=${{ github.event.repository.name }}
            ISSUE_NUMBER=${{ github.event.issue.number }}
            ASSIGNEE=ai-bot
            DEFAULT_BRANCH=${{ github.event.repository.default_branch }}
            POLICY_PATH=/workspace/policy.yaml